entity cont_display is 
port (
signal clk, pisca1, pisca2, en : in bit;
signal dado : in bit_vector (3 downto 0);  -- dado 0 ate F -  numeros que vão aparecer no display
signal local: in bit_vector (2 downto 0); -- local 0 ate 7 -  qual display vai acender (memoria de display)
signal tipo : in bit_vector (1 downto 0);  -- tipo 0 ate 3  - Se o display vai ficar aceso, apagado, pisca1 ou pisca2
signal hex7, hex6, hex5, hex4,
       hex3, hex2, hex1, hex0  : out bit_vector (6 downto 0)
);
end entity cont_display;


architecture c_cont_display of cont_display is
-------------------------------------------------------------------------------------

component conv_7seg is 
port(
	signal dado : in bit_vector (3 downto 0);
	signal en : in bit;
	signal display : out bit_vector (6 downto 0) -- [sg sf se sd sc sb sa]
);
end component conv_7seg;

--------------------------------------------------------------------------------------




signal display : bit_vector (6 downto 0);
signal pisca1, pisca2 : bit;

begin -- inicio da arquitetura.

          
controle: process (tipo, local) 
begin

if tipo = "00" then
hex7 <= "1111111"
hex6 <= "1111111"
hex5 <= "1111111"
hex4 <= "1111111"
hex3 <= "1111111"
hex2 <= "1111111"
hex1 <= "1111111"
hex0 <= "1111111"
---------------------------------------------------
else if tipo = "01" then
case local is
   when "000"  => hex0 <= display;
	when "001"  => hex1 <= display;
	when "010"  => hex2 <= display;
	when "011"  => hex3 <= display;
	when "100"  => hex4 <= display;
	when "101"  => hex5 <= display;
	when "110"  => hex6 <= display;
	when others => hex7 <= display;
end case;
------------------------------------------------------	
else if tipo = "10" then
if pisca1 = '1' and pisca1'event then
case local is
   when "000"  => hex0 <= display;
	when "001"  => hex1 <= display;
	when "010"  => hex2 <= display;
	when "011"  => hex3 <= display;
	when "100"  => hex4 <= display;
	when "101"  => hex5 <= display;
	when "110"  => hex6 <= display;
	when others => hex7 <= display;
end case;
end if 
-----------------------------------------------------	
else if tipo = "11" then
if pisca2 = '1' and pisca2'event then
case local is
   when "000"  => hex0 <= display;
	when "001"  => hex1 <= display;
	when "010"  => hex2 <= display;
	when "011"  => hex3 <= display;
	when "100"  => hex4 <= display;
	when "101"  => hex5 <= display;
	when "110"  => hex6 <= display;
	when others => hex7 <= display;
end case;
end if 
------------------------------------------------------
end if

end process controle;




clk <= CLOCK_50;
memoria: process(clk)
if clk = '0' and clk'event then
   l
end if

  
       
end process memoria;


clk <= KEY [3];
en  <= KEY [2];
 
-- DECLARAÇÕES DOS SWITCHES (dado, local e tipo):
dado(0)  <= SW[0];
dado(1)  <= SW[1];
dado(2)  <= SW[2];
dado(3)  <= SW[3];

local(0) <= SW[4];
local(1) <= SW[5];
local(2) <= SW[6];

tipo(0)  <= SW[7];
tipo(1)  <= SW[8];





end architecture c_cont_display;